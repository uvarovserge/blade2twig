<?php

/**
 * Blade 2 Twig
 *
 * Changes automatically created blade templates to twig
 *
 * Works in most situations, but in some edge cases a manual intervention might be required
 *
 * WARNING: The script is fine-tuned to work with exact files auto-generated by Laravel. I take no responsibility
 * if you try it on some files you've tampered with and it produces rubbish
 *
 * Run: php blade2twig.php
 */

define('DELETE_ORIGINALS', true);
define('CONVERT_PATH', './resources/views/');

$files = dirToArray(CONVERT_PATH);

foreach($files as $file) {
    if (endsWith($file, '.blade.php')) {
        $result = convert(file_get_contents(CONVERT_PATH.$file));
        $newFileName = str_replace('.blade.php', '.twig', $file);
        file_put_contents(CONVERT_PATH.$newFileName, $result);
        if (DELETE_ORIGINALS) {
            unlink(CONVERT_PATH.$file);
        }
    }
}

function convert($s) {
    $s = preg_replace_callback("/@extends\('(.+?)'\)/", function($matches) {
        return "{% extends '".str_replace('.', '/', $matches[1])."' %}";
    }, $s);

    $s = preg_replace("/@section\('(.+?)'\)/", "{% block $1 %}", $s);
    $s = preg_replace("/@endsection/", "{% endblock %}", $s);
    $s = preg_replace("/@yield\('(.+?)'\)/", "{% block $1 %}{% endblock %}", $s);
    $s = preg_replace("/@if\s*?\((.+?)\)\s*?\n/", "{% if $1 %}\n", $s);
    $s = preg_replace("/@elseif\s*?\((.+?)\)\s*?\n/", "{% elseif $1 %}\n", $s);
    $s = preg_replace("/@elif\s*?\((.+?)\)\s*?\n/", "{% elseif $1 %}\n", $s);
    $s = preg_replace("/@else/", "{% else %}", $s);
    $s = preg_replace("/@endif/", "{% endif %}", $s);
    $s = preg_replace("/@csrf/", "{{ csrf_field() }}", $s);
    $s = preg_replace("/{{--/", "{#", $s);
    $s = preg_replace("/--}}/", "#}", $s);
    $s = preg_replace_callback("/@foreach\s*?\((.+?)\s*?as\s*?(.+?)\)/", function($matches) {
        $match1 = $matches[1];
        $match2 = $matches[2];
        $match1 = trim($match1);
        $match2 = trim($match2);
        if (strpos($match2, '=>')!==false) {
            $match2 = explode('=>', $match2);
            return "{% for ".trim($match2[0]).", ".trim($match2[1])." in $match1 %}";
        } else {
            return "{% for $match2 in $match1 %}";
        }
    }, $s);
    $s = preg_replace("/@endforeach/", "{% endfor %}", $s);
    $s = preg_replace("/@lang\s*?\((.+?)\)/", "{{ trans($1) }}", $s);
    $s = preg_replace("/@auth/", "{% if Auth.check() %}", $s);
    $s = preg_replace("/@endauth/", "{% endif %}", $s);
    $s = preg_replace("/@guest/", "{% if Auth.guest() %}", $s);
    $s = preg_replace("/@endguest/", "{% endif %}", $s);

    $s = preg_replace("/@error\(['\"](.*?)['\"]\)(.*?)@enderror/", '{% if errors.has(\'$1\') %}$2{% endif %}', $s);
    $s = preg_replace("/@error\(['\"](.*?)['\"]\)(.*?){{\s*?\\\$message\s*?}}(.*?)@enderror/s", '{% if errors.has(\'$1\') %}$2{{ errors.first(\'$1\') }}$3{% endif %}', $s);
    
    $s = preg_replace_callback("~{{(.*?)}}~", function($matches) {
        return str_replace(['$', '->', '::'], ['', '.', '.'], $matches[0]);
    }, $s);
    $s = preg_replace_callback("~{%(.*?)%}~", function($matches) {
        return str_replace(['$', '->', '::'], ['', '.', '.'], $matches[0]);
    }, $s);

    return $s;
}

function dirToArray($dir) {
    $result = array();

    $cdir = scandir($dir);
    foreach ($cdir as $key => $value)
    {
        if (!in_array($value,array(".","..")))
        {
            if (is_dir($dir . DIRECTORY_SEPARATOR . $value))
            {
                $files = dirToArray($dir . DIRECTORY_SEPARATOR . $value);
                foreach($files as $file) {
                    $result[] = $value . DIRECTORY_SEPARATOR . $file;
                }
            }
            else
            {
                $result[] = $value;
            }
        }
    }

    return $result;
}

function endsWith($haystack, $needle)
{
    $length = strlen($needle);
    if ($length == 0) {
        return true;
    }

    return (substr($haystack, -$length) === $needle);
}
